blueprint:
  name: Frigate MQTT Alert with GenAI to Pushover
  description: >
    Sends Frigate MQTT AI event notifications (with snapshots) to Pushover.
    Choose cameras and object types to alert on. Compatible with Graylog logging setups.
  domain: automation
  input:
    frigate_cameras:
      name: Frigate Cameras
      description: Select one or more Frigate camera entities.
      selector:
        entity:
          domain: camera
          integration: frigate
          multiple: true

    frigate_objects:
      name: Objects to Alert
      description: Select object types to trigger notifications.
      default: []
      selector:
        select:
          multiple: true
          options:
            - person
            - car
            - dog
            - cat
            - package

    pushover_targets:
      name: Pushover Device Names (optional)
      description: >
        Comma-separated list of Pushover device names.
        Leave blank to notify all devices.
      default: ""
      selector:
        text:

variables:
  frigate_cameras: !input frigate_cameras
  frigate_objects: !input frigate_objects
  pushover_targets: !input pushover_targets

  selected_cameras: >
    {{ frigate_cameras | map('replace', 'camera.', '') | list }}

  payload: "{{ trigger.payload_json }}"
  event_type: "{{ payload.type }}"
  event_id: "{{ payload.after.id }}"
  camera: "{{ payload.after.camera }}"
  object: "{{ payload.after.label | lower }}"
  ai_description: >
    {% set desc = payload.after.sub_label %}
    {% if desc %}
      {{ desc }}
    {% else %}
      {{ object | title }} detected
    {% endif %}

  snapshot_url: "http://10.10.10.81:5000/api/events/{{ event_id }}/snapshot.jpg"

  pushover_targets_list: >
    {% if pushover_targets|trim %}
      {{ pushover_targets.split(',') | map('trim') | list }}
    {% else %}
      []
    {% endif %}

trigger:
  - platform: mqtt
    topic: frigate/events

condition:
  - condition: template
    value_template: "{{ event_type == 'new' }}"
  - condition: template
    value_template: "{{ camera in selected_cameras }}"
  - condition: template
    value_template: "{{ object in frigate_objects }}"

action:
  - service: notify.pushover
    data:
      message: "{{ ai_description }}"
      title: "Frigate: {{ object | title }} detected on {{ camera | replace('_', ' ') | title }}"
      data:
        attachment: "{{ snapshot_url }}"
        priority: 1
      target: "{{ pushover_targets_list if pushover_targets_list else none }}"

  # Optionally log the event explicitly for Graylog (via Logspout):
  - service: system_log.write
    data:
      level: info
      message: "Frigate event: {{ object }} detected on {{ camera }} | Snapshot: {{ snapshot_url }}"

mode: queued
max: 10
