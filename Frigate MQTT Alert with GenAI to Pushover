blueprint:
  name: Frigate MQTT Alert (GenAI Only, Selectable Severity)
  description: >
    Sends a Home Assistant mobile notification for Frigate MQTT events
    with GenAI text. You can choose whether to trigger on alert only,
    or both alert and detection severity levels.
  domain: automation
  input:
    frigate_cameras:
      name: Frigate Cameras
      description: Select one or more Frigate camera entities.
      selector:
        entity:
          domain: camera
          integration: frigate
          multiple: true

    frigate_objects:
      name: Objects to Alert
      description: Select object types to trigger notifications.
      default: []
      selector:
        select:
          multiple: true
          options:
            - person
            - car
            - dog
            - cat
            - package

    mobile_device:
      name: Mobile Device (HA Mobile App)
      description: Your mobile app device name (e.g., motorola_razr_2024)
      selector:
        text:

    allow_detections:
      name: Allow "detection" severity (not just alerts)?
      description: >
        If enabled, this will trigger notifications on both "detection" and "alert" events.
        Disable to only alert on events Frigate considers important ("alert").
      default: false
      selector:
        boolean:

variables:
  frigate_cameras: !input frigate_cameras
  frigate_objects: !input frigate_objects
  mobile_device: !input mobile_device
  allow_detections: !input allow_detections

  selected_cameras: >
    {{ frigate_cameras | map('replace', 'camera.', '') | list }}

  payload: "{{ trigger.payload_json }}"
  event_type: "{{ payload.type }}"
  event_id: "{{ (payload.after.id if payload.after is defined else payload.id) | default('') }}"
  camera: "{{ (payload.after.camera if payload.after is defined else payload.camera) | default('') }}"
  object: "{{ (payload.after.label if payload.after is defined else payload.label) | lower | default('') }}"
  max_severity: "{{ (payload.after.max_severity if payload.after is defined else payload.max_severity) | default('detection') }}"
  ai_description: >
    {% if event_type == 'description' and payload.description is defined %}
      {{ payload.description }}
    {% elif payload.after is defined and payload.after.sub_label is defined %}
      {{ payload.after.sub_label }}
    {% else %}
      {{ object | title }} detected
    {% endif %}

trigger:
  - platform: mqtt
    topic: frigate/events
  - platform: mqtt
    topic: frigate/tracked_object_update

condition:
  - condition: template
    value_template: "{{ event_type in ['new', 'update', 'description'] }}"
  - condition: template
    value_template: "{{ camera in selected_cameras }}"
  - condition: template
    value_template: "{{ object in frigate_objects }}"
  - condition: template
    value_template: >-
      {% if allow_detections %}
        {{ max_severity in ['alert', 'detection'] }}
      {% else %}
        {{ max_severity == 'alert' }}
      {% endif %}

action:
  - service: notify.mobile_app_{{ mobile_device }}
    data:
      message: "{{ ai_description }}"
      title: "Frigate: {{ object | title }} detected on {{ camera | replace('_', ' ') | title }}"
      data:
        tag: "frigate_{{ event_id }}"
        persistent: true
        ttl: 0
        priority: high

mode: queued
max: 10
