blueprint:
  name: Frigate MQTT Alert with GenAI to HA Mobile App
  description: >
    Sends Frigate event notifications to Home Assistant mobile devices.
    Includes GenAI text if available, snapshot images if available,
    and action buttons for viewing both clip and snapshot.
  domain: automation
  input:
    frigate_cameras:
      name: Frigate Cameras
      description: Select one or more Frigate camera entities.
      selector:
        entity:
          domain: camera
          integration: frigate
          multiple: true

    frigate_objects:
      name: Objects to Alert
      description: Select object types to trigger notifications.
      default: []
      selector:
        select:
          multiple: true
          options:
            - person
            - car
            - dog
            - cat
            - package

    mobile_device:
      name: Mobile Device (HA Mobile App)
      description: Mobile device name for notifications (e.g., pixel_8, motorola_razr_2024)
      selector:
        text:

variables:
  frigate_cameras: !input frigate_cameras
  frigate_objects: !input frigate_objects
  mobile_device: !input mobile_device

  selected_cameras: >
    {{ frigate_cameras | map('replace', 'camera.', '') | list }}

  payload: "{{ trigger.payload_json }}"
  event_type: "{{ payload.type }}"
  event_id: "{{ (payload.after.id if payload.after is defined else payload.id) | default('') }}"
  camera: "{{ (payload.after.camera if payload.after is defined else payload.camera) | default('') }}"
  object: "{{ (payload.after.label if payload.after is defined else payload.label) | lower | default('') }}"
  max_severity: "{{ (payload.after.max_severity if payload.after is defined else payload.max_severity) | default('detection') }}"
  ai_description: >
    {% if event_type == 'description' and payload.description is defined %}
      {{ payload.description }}
    {% elif payload.after is defined and payload.after.sub_label is defined %}
      {{ payload.after.sub_label }}
    {% else %}
      {{ object | title }} detected
    {% endif %}
  snapshot_url: >
    {% if (payload.after is defined and payload.after.has_snapshot) or (payload.has_snapshot is defined and payload.has_snapshot) %}
      http://10.10.10.81:5000/api/events/{{ event_id }}/snapshot.jpg
    {% else %}
      ""
    {% endif %}
  clip_url: "http://10.10.10.81:5000/api/events/{{ event_id }}/clip.mp4"

trigger:
  - platform: mqtt
    topic: frigate/events
  - platform: mqtt
    topic: frigate/tracked_object_update

condition:
  - condition: template
    value_template: "{{ event_type in ['new', 'update', 'description'] }}"
  - condition: template
    value_template: "{{ camera in selected_cameras }}"
  - condition: template
    value_template: "{{ object in frigate_objects }}"
  - condition: template
    value_template: "{{ max_severity == 'alert' }}"

action:
  - service: notify.mobile_app_{{ mobile_device }}
    data:
      message: "{{ ai_description }}"
      title: "Frigate: {{ object | title }} detected on {{ camera | replace('_', ' ') | title }}"
      data:
        tag: "frigate_{{ event_id }}"
        notification_icon: mdi:cctv
        ttl: 0
        priority: high
        channel: Frigate
        persistent: true
        update: true
        image: "{{ snapshot_url if snapshot_url else '' }}"
        actions:
          - action: URI
            title: "View Clip"
            uri: "{{ clip_url }}"
          - action: URI
            title: "View Snapshot"
            uri: "{{ snapshot_url }}"

mode: queued
max: 10
