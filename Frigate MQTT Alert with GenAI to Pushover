blueprint:
  name: Frigate MQTT Alert with GenAI to HA
  description: >
    Sends Frigate MQTT AI event notifications (with GenAI text) to HA mobile app.
    Choose cameras and object types to alert on.
  domain: automation
  input:
    frigate_cameras:
      name: Frigate Cameras
      description: Select one or more Frigate camera entities.
      selector:
        entity:
          domain: camera
          integration: frigate
          multiple: true

    frigate_objects:
      name: Objects to Alert
      description: Select object types to trigger notifications.
      default: []
      selector:
        select:
          multiple: true
          options:
            - person
            - car
            - dog
            - cat
            - package

    mobile_device:
      name: Mobile Device
      description: Name of the target mobile device to receive notifications.
      selector:
        device:

    allow_detections:
      name: Include Lower Severity Events (Detection/None)
      description: >
        If enabled, will send notifications for lower-severity events (max_severity: detection or null).
        If disabled, only alerts (max_severity: alert) will be notified.
      default: false
      selector:
        boolean:

variables:
  frigate_cameras: !input frigate_cameras
  frigate_objects: !input frigate_objects
  mobile_device: !input mobile_device
  allow_detections: !input allow_detections

  selected_cameras: >
    {{ frigate_cameras | map('replace', 'camera.', '') | list }}

  payload: "{{ trigger.payload_json }}"
  event_type: "{{ payload.type }}"
  event_id: "{{ payload.after.id }}"
  camera: "{{ payload.after.camera }}"
  object: "{{ payload.after.label | lower }}"
  max_severity: "{{ payload.after.max_severity | default('none') }}"
  ai_description: >
    {% set desc = payload.after.sub_label %}
    {% if desc %}
      {{ desc }}
    {% else %}
      {{ object | title }} detected
    {% endif %}

trigger:
  - platform: mqtt
    topic: frigate/events

condition:
  - condition: template
    value_template: "{{ event_type in ['new', 'update', 'description'] }}"

  - condition: template
    value_template: "{{ camera in selected_cameras }}"

  - condition: template
    value_template: "{{ object in frigate_objects }}"

  - condition: template
    value_template: >
      {{
        (max_severity == 'alert') or
        (allow_detections and (max_severity == 'detection' or max_severity == 'none'))
      }}

action:
  - service: notify.mobile_app_{{ mobile_device }}
    data:
      message: "{{ ai_description }}"
      title: "Frigate: {{ object | title }} on {{ camera | replace('_', ' ') | title }}"
      data:
        ttl: 0
        priority: high

mode: queued
max: 10
