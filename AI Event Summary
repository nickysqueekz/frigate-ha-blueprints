blueprint:
  name: aAI Event Summary
  author: valentinfrlch + nr + customized dual notify
  homeassistant:
    min_version: 2024.10.0
  description: >
    AI-powered summaries for security camera events. Sends a notification
    with a preview to your phone that is updated dynamically when the AI summary is
    available.
  domain: automation
  source_url: https://github.com/nickysqueekz/frigate-ha-blueprints/blob/main/AI%20Event%20Summary%201.5.3.yaml

  input:
    # ... [inputs unchanged for brevity]

variables:
  # ... [variables unchanged for brevity]

max_exceeded: silent
mode: single

triggers:
  - platform: state
    entity_id: !input camera_entities
    to: !input trigger_state
    id: camera_trigger
  - platform: state
    entity_id: !input motion_sensors
    to: 'on'
    id: motion_sensor_trigger

condition:
  - condition: and
    conditions: !input run_conditions

action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ important }}'
        sequence:
          - service: llmvision.image_analyzer
            data:
              image_entity: '{{ [camera_entity] }}'
              provider: !input provider
              model: !input model
              message: '{{ importance_prompt }}'
              include_filename: true
              target_width: 1280
              max_tokens: 3
            response_variable: importance

  - choose:
      - conditions:
          - condition: template
            value_template: '{{ important and importance.response_text|lower == "passive" }}'
        sequence:
          - stop: Event is not important

  - if:
      - condition: template
        value_template: !input notify
    then:
      - if:
          - condition: !input condition_notify
        then:
          - if:
              - condition: template
                value_template: '{{ not this.attributes.last_triggered or (now() - this.attributes.last_triggered).seconds > delay_notification }}'
            then:
              - choose:
                  - conditions:
                      - condition: template
                        value_template: '{{ notification_delivery == "Dynamic" }}'
                    sequence:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: '{{ preview_mode == "Snapshot" }}'
                            sequence:
                              - service: camera.snapshot
                                data:
                                  filename: !input file_path
                                entity_id: !input camera_entities
                              - repeat:
                                  for_each: '{{ device_name_map_notify_devices }}'
                                  sequence:
                                    - service: notify.{{ repeat.item }}
                                      data:
                                        title: '{{ label }} {{ notification_time }}'
                                        message: '{{ camera_message }} has detected activity.'
                                        data:
                                          url: !input tap_navigate
                                          clickAction: !input tap_navigate
                                          tag: '{{ tag }}'
                                          group: !input notification_channel
                                          alert_once: true
                                          ttl: 0
                                          priority: high
                                          channel: !input notification_channel
                                          color: !input notification_color
                                          notification_icon: !input notification_icon
                                          sticky: !input notification_sticky
                                          image: '{{ snapshot_access_file_path }}'
                                          attachment:
                                            url: '{{ snapshot_access_file_path }}'
                                            content_type: JPEG
                                          push:
                                            interruption-level: '{{ importance.response_text|lower if importance is defined else "active" }}'
                                            sound:
                                              name: !input notification_sound
                                              volume: !input notification_volume
                                              critical: '{{ notification_critical }}'
                          - conditions:
                              - condition: template
                                value_template: '{{ preview_mode == "Live Preview" }}'
                            sequence:
                              - repeat:
                                  for_each: '{{ device_name_map_notify_devices }}'
                                  sequence:
                                    - service: notify.{{ repeat.item }}
                                      data:
                                        title: '{{ label }} {{ notification_time }}'
                                        message: '{{ camera_message }} has detected activity.'
                                        data:
                                          entity_id: '{{ camera_entity }}'
                                          url: !input tap_navigate
                                          tag: '{{ tag }}'
                                          group: !input notification_channel
                                          alert_once: true
                                          push:
                                            interruption-level: '{{ importance.response_text|lower if importance is defined else "active" }}'
                                            sound:
                                              name: !input notification_sound
                                              volume: !input notification_volume
                                              critical: '{{ notification_critical }}'
                                          ttl: 0
                                          priority: high

                      - repeat:
                          for_each: '{{ device_name_map_notify_entities }}'
                          sequence:
                            - service: notify.{{ repeat.item }}
                              data:
                                title: '{{ label }} {{ notification_time }}'
                                message: '{{ camera_message }} has detected activity.'
                                data:
                                  url: !input tap_navigate
                                  clickAction: !input tap_navigate
                                  tag: '{{ tag }}'
                                  group: !input notification_channel
                                  alert_once: true
                                  ttl: 0
                                  priority: high
                                  channel: !input notification_channel
                                  color: !input notification_color
                                  notification_icon: !input notification_icon
                                  sticky: !input notification_sticky
                                  image: '{{ snapshot_access_file_path }}'
                                  attachment:
                                    url: '{{ snapshot_access_file_path }}'
                                    content_type: JPEG
                                  push:
                                    interruption-level: '{{ importance.response_text|lower if importance is defined else "active" }}'
                                    sound:
                                      name: !input notification_sound
                                      volume: !input notification_volume
                                      critical: '{{ notification_critical }}'

                  - conditions:
                      - condition: template
                        value_template: '{{ preview_mode == "Live Preview" }}'
                    sequence:
                      - repeat:
                          for_each: '{{ device_name_map_notify_entities }}'
                          sequence:
                            - service: notify.{{ repeat.item }}
                              data:
                                title: '{{ label }} {{ notification_time }}'
                                message: '{{ camera_message }} has detected activity.'
                                data:
                                  entity_id: '{{ camera_entity }}'
                                  url: !input tap_navigate
                                  tag: '{{ tag }}'
                                  group: !input notification_channel
                                  alert_once: true
                                  push:
                                    interruption-level: '{{ importance.response_text|lower if importance is defined else "active" }}'
                                    sound:
                                      name: !input notification_sound
                                      volume: !input notification_volume
                                      critical: '{{ notification_critical }}'
                                  ttl: 0
                                  priority: high

  - service: llmvision.stream_analyzer
    data:
      image_entity: '{{ [camera_entity] }}'
      duration: !input duration
      provider: !input provider
      model: !input model
      message: !input message
      use_memory: !input use_memory
      remember: !input remember
      expose_images: '{{ preview_mode == "Snapshot" or remember }}'
      generate_title: !input remember
      include_filename: true
      max_frames: !input max_frames
      target_width: !input target_width
      max_tokens: !input max_tokens
    response_variable: response

  - variables:
      label: '{{ response.title }}'

  - if:
      - condition: template
        value_template: !input notify
    then:
      - if:
          - condition: !input condition_notify
        then:
          - if:
              - condition: template
                value_template: '{{ not this.attributes.last_triggered or (now() - this.attributes.last_triggered).seconds > delay_notification }}'
            then:
              - choose:
                  - conditions:
                      - condition: template
                        value_template: '{{ analysis_mode == "Snapshot" }}'
                    sequence:
                      - repeat:
                          for_each: '{{ device_name_map_notify_devices }}'
                          sequence:
                            - service: notify.{{ repeat.item }}
                              data:
                                title: '{{ label }} {{ notification_time }}'
                                message: '{{ response.response_text }}'
                                data:
                                  image: '{{ response.key_frame.replace("/config/media", "/media") }}'
                                  url: !input tap_navigate
                                  clickAction: !input tap_navigate
                                  tag: '{{ tag }}'
                                  group: !input notification_channel
                                  alert_once: true
                                  ttl: 0
                                  priority: high
                                  channel: !input notification_channel
                                  color: !input notification_color
                                  notification_icon: !input notification_icon
                                  sticky: !input notification_sticky
                                  push:
                                    interruption-level: '{{ "passive" if notification_delivery == "Dynamic" else "active" }}'
                                    sound:
                                      name: !input notification_sound
                                      volume: !input notification_volume
                                      critical: '{{ notification_critical }}'
                                actions:
                                  - action: URI
                                    title: See Snapshot
                                    uri: '{{ response.key_frame.replace("/config/media", "/media") }}'

                  - conditions:
                      - condition: template
                        value_template: '{{ analysis_mode == "Live Preview" }}'
                    sequence:
                      - repeat:
                          for_each: '{{ device_name_map_notify_devices }}'
                          sequence:
                            - service: notify.{{ repeat.item }}
                              data:
                                title: '{{ label }} {{ notification_time }}'
                                message: '{{ response.response_text }}'
                                data:
                                  entity_id: '{{ camera_entity }}'
                                  url: !input tap_navigate
                                  tag: '{{ tag }}'
                                  group: !input notification_channel
                                  alert_once: true
                                  push:
                                    interruption-level: '{{ importance.response_text|lower if importance is defined else "active" }}'
                                    sound:
                                      name: !input notification_sound
                                      volume: !input notification_volume
                                      critical: '{{ notification_critical }}'
                                  ttl: 0
                                  priority: high

                  - conditions:
                      - condition: template
                        value_template: '{{ analysis_mode == "Snapshot" }}'
                    sequence:
                      - repeat:
                          for_each: '{{ device_name_map_notify_entities }}'
                          sequence:
                            - service: notify.{{ repeat.item }}
                              data:
                                title: '{{ label }} {{ notification_time }}'
                                message: '{{ response.response_text }}'
                                data:
                                  image: '{{ response.key_frame.replace("/config/media", "/media") }}'
                                  url: !input tap_navigate
                                  clickAction: !input tap_navigate
                                  tag: '{{ tag }}'
                                  group: !input notification_channel
                                  alert_once: true
                                  ttl: 0
                                  priority: high
                                  channel: !input notification_channel
                                  color: !input notification_color
                                  notification_icon: !input notification_icon
                                  sticky: !input notification_sticky
                                  push:
                                    interruption-level: '{{ "passive" if notification_delivery == "Dynamic" else "active" }}'
                                    sound:
                                      name: !input notification_sound
                                      volume: !input notification_volume
                                      critical: '{{ notification_critical }}'
                                actions:
                                  - action: URI
                                    title: See Snapshot
                                    uri: '{{ response.key_frame.replace("/config/media", "/media") }}'

                  - conditions:
                      - condition: template
                        value_template: '{{ analysis_mode == "Live Preview" }}'
                    sequence:
                      - repeat:
                          for_each: '{{ device_name_map_notify_entities }}'
                          sequence:
                            - service: notify.{{ repeat.item }}
                              data:
                                title: '{{ label }} {{ notification_time }}'
                                message: '{{ response.response_text }}'
                                data:
                                  entity_id: '{{ camera_entity }}'
                                  url: !input tap_navigate
                                  tag: '{{ tag }}'
                                  group: !input notification_channel
                                  alert_once: true
                                  push:
                                    interruption-level: '{{ importance.response_text|lower if importance is defined else "active" }}'
                                    sound:
                                      name: !input notification_sound
                                      volume: !input notification_volume
                                      critical: '{{ notification_critical }}'
                                  ttl: 0
                                  priority: high

  - if:
      - condition: template
        value_template: '{{ tts_notification }}'
    then:
      - if:
          - condition: !input condition_notify_tts
        then:
          - repeat:
              for_each: '{{ device_name_map_notify_devices }}'
              sequence:
                - service: notify.{{ repeat.item }}
                  data:
                    message: TTS
                    data:
                      ttl: 0
                      priority: high
                      media_stream: !input tts_volume
                      tts_text: '{{ response.response_text }}'

  - choose: []
    default: !input additional_actions

  - delay: !input cooldown
