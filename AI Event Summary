blueprint:
  name: AI Event Summary with Telegram (Enhanced v1.7.0)
  author: valentinfrlch (modified for Telegram - v1.7 branch)
  homeassistant:
    min_version: 2024.10.0
  description: >
    AI-powered camera event summaries with Frigate v0.16 enhanced analysis integration.
    v1.7.0 - Foundation: Face recognition and enhanced object data support.
  domain: automation
  input:
    telegram_section:
      name: Telegram Settings
      icon: mdi:telegram
      input:
        telegram_target:
          name: Telegram Chat ID
          description: The chat ID to send notifications to
          selector:
            text: {}
        notification_time:
          name: Notification Time Format
          description: Add time to notification messages
          default: "12hour"
          selector:
            select:
              options:
                - label: "No Time Added"
                  value: "none"
                - label: "12 Hour Format (3:45 PM)"
                  value: "12hour"
                - label: "24 Hour Format (15:45)"
                  value: "24hour"
        delay_notification:
          name: Notification Cooldown (Seconds)
          description: Time to wait before sending another notification
          default: 60
          selector:
            number:
              min: 0
              max: 3600
              step: 1
        media_type:
          name: Media Type
          description: Type of media to send with notifications
          default: "snapshot"
          selector:
            select:
              options:
                - label: "Static Snapshot"
                  value: "snapshot"
                - label: "Frigate Clip (MP4)"
                  value: "clip"
                - label: "Frigate GIF"
                  value: "gif"

    # ... [keep all existing camera, ai, object, fallback, filtering sections from v1.6.2.1] ...

    frigate_enhanced_section:
      name: Frigate v0.16 Enhanced Features
      icon: mdi:face-recognition
      input:
        use_face_recognition:
          name: Enable Face Recognition Data
          description: Use Frigate's face recognition results in AI analysis
          default: true
          selector:
            boolean: {}
        include_confidence_scores:
          name: Include Confidence Scores
          description: Add object detection confidence scores to AI context
          default: true
          selector:
            boolean: {}
        use_zone_context:
          name: Enable Zone Context
          description: Include zone information in AI analysis
          default: true
          selector:
            boolean: {}
        face_confidence_threshold:
          name: Face Recognition Confidence Threshold
          description: Minimum confidence to include face names (0-100)
          default: 75
          selector:
            number:
              min: 0
              max: 100
              step: 5

variables:
  # ... [keep all existing variables from v1.6.2.1] ...
  
  # NEW: Enhanced Frigate data variables
  use_face_recognition: !input use_face_recognition
  include_confidence_scores: !input include_confidence_scores
  use_zone_context: !input use_zone_context
  face_confidence_threshold: !input face_confidence_threshold
  
  # Extract enhanced Frigate event data
  frigate_event_data: >
    {% if trigger.platform == 'mqtt' and trigger.payload_json is defined and trigger.payload_json.after is defined %}
      {{ trigger.payload_json.after }}
    {% else %}
      {}
    {% endif %}
  
  # Face recognition data
  detected_faces: >
    {% if use_face_recognition and frigate_event_data.faces is defined %}
      {{ frigate_event_data.faces }}
    {% else %}
      []
    {% endif %}
  
  # Known faces above threshold
  known_faces: >
    {% set faces = detected_faces %}
    {% set threshold = face_confidence_threshold / 100 %}
    {{ faces | selectattr('confidence', '>', threshold) | selectattr('name', 'defined') | list }}
  
  # Enhanced objects with confidence
  enhanced_objects: >
    {% if include_confidence_scores and frigate_event_data.objects is defined %}
      {{ frigate_event_data.objects }}
    {% else %}
      {{ detected_objects }}
    {% endif %}
  
  # Zone information
  triggered_zones: >
    {% if use_zone_context and frigate_event_data.zones is defined %}
      {{ frigate_event_data.zones }}
    {% else %}
      []
    {% endif %}
  
  # Generate enhanced context for AI
  frigate_context: >
    {% set context = [] %}
    
    {# Add face recognition context #}
    {% if known_faces | length > 0 %}
      {% for face in known_faces %}
        {% set context = context + ["Recognized person: " + face.name + " (confidence: " + (face.confidence * 100)|round + "%)"] %}
      {% endfor %}
    {% endif %}
    
    {# Add unknown faces #}
    {% if detected_faces | length > known_faces | length %}
      {% set unknown_count = (detected_faces | length) - (known_faces | length) %}
      {% set context = context + [unknown_count|string + " unrecognized face(s) detected"] %}
    {% endif %}
    
    {# Add zone context #}
    {% if triggered_zones | length > 0 %}
      {% set context = context + ["Active zones: " + triggered_zones|join(", ")] %}
    {% endif %}
    
    {# Add enhanced object info #}
    {% if include_confidence_scores and enhanced_objects %}
      {% for obj in enhanced_objects %}
        {% if obj.confidence is defined %}
          {% set context = context + [obj.label + " detected (confidence: " + (obj.confidence * 100)|round + "%)"] %}
        {% endif %}
      {% endfor %}
    {% endif %}
    
    {{ context | join("; ") }}
  
  # Enhanced AI prompt that includes Frigate context
  enhanced_ai_prompt: >
    {% if frigate_context %}
      Frigate detected: {{ frigate_context }}.
      
      {{ ai_prompt }}
      
      Use the Frigate detection data to provide more specific and accurate analysis.
    {% else %}
      {{ ai_prompt }}
    {% endif %}

# ... [keep all existing trigger and action sections from v1.6.2.1, but replace ai_prompt with enhanced_ai_prompt in the llmvision calls] ...
