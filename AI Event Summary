blueprint:
  name: AI Event Summary with Telegram (Simple v1.0)
  author: valentinfrlch (modified for Telegram - rebuilt)
  homeassistant:
    min_version: 2024.10.0
  description: 'Simple AI-powered camera event summaries sent to Telegram.'
  domain: automation
  input:
    telegram_target:
      name: Telegram Chat ID
      description: The chat ID to send notifications to
      default: "7882720724"
      selector:
        text: {}
    camera_entity:
      name: Camera Entity
      description: Single camera entity to monitor
      selector:
        entity:
          domain: camera
    motion_sensor:
      name: Motion Sensor (Optional)
      description: Motion sensor for this camera (leave empty if camera changes state)
      default: ""
      selector:
        entity:
          domain: binary_sensor
    provider:
      name: LLM Provider
      description: Provider for AI analysis
      selector:
        config_entry:
          integration: llmvision
    model:
      name: Model
      description: Model to use
      default: "gpt-4o-mini"
      selector:
        text: {}

variables:
  camera_entity: !input camera_entity
  motion_sensor: !input motion_sensor
  telegram_target: !input telegram_target
  camera_name: '{{ camera_entity.replace("camera.", "").replace("_", " ").title() }}'
  snapshot_path: '/config/www/snapshots/{{ camera_entity.replace("camera.", "") }}_snapshot.jpg'
  is_manual_trigger: "{{ trigger is not defined }}"

max_exceeded: silent
mode: single

trigger:
- platform: state
  entity_id: !input camera_entity
  to: "recording"
  id: camera_trigger
- platform: state  
  entity_id: !input motion_sensor
  to: "on"
  id: motion_trigger

action:
# Manual trigger notification
- if:
  - condition: template
    value_template: "{{ is_manual_trigger }}"
  then:
  - service: telegram_bot.send_message
    data:
      target: !input telegram_target
      message: "üîß Manual trigger activated for {{ camera_name }} at {{ now().strftime('%H:%M:%S') }}"

# Regular event processing
- if:
  - condition: template
    value_template: "{{ not is_manual_trigger }}"
  then:
  - service: camera.snapshot
    target:
      entity_id: "{{ camera_entity }}"
    data:
      filename: "{{ snapshot_path }}"
  
  - service: telegram_bot.send_photo
    data:
      target: !input telegram_target
      file: "{{ snapshot_path }}"
      caption: "üìπ {{ camera_name }} detected motion - analyzing..."
  
  - service: llmvision.stream_analyzer
    data:
      image_entity: ["{{ camera_entity }}"]
      duration: 5
      provider: !input provider
      model: !input model
      message: "Describe what you see in this security camera footage. Focus on any people, vehicles, or notable activity."
      max_frames: 3
      target_width: 1280
      max_tokens: 50
    response_variable: analysis
  
  - service: telegram_bot.send_message
    data:
      target: !input telegram_target
      message: "üîç Analysis: {{ analysis.response_text }}"
