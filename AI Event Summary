blueprint:
  name: AI Event Summary (Telegram v1.5.1)
  author: valentinfrlch (modified for Telegram)
  homeassistant:
    min_version: 2024.10.0
  description: >
    AI-powered summaries for security camera events. Sends a notification to Telegram with a preview, updated when the AI summary is available.
  domain: automation
  input:
    run_conditions:
      name: Run Conditions
      description: All conditions must be true in order for the blueprint to run.
      default: []
      selector:
        condition: {}
    cooldown:
      name: Cooldown
      description: Time to wait before running automation again.
      default:
        minutes: 10
      selector:
        duration: {}
    camera_sensor_section:
      name: Camera & Sensor Settings
      description: Settings for the camera and sensor entities.
      icon: mdi:camera
      input:
        camera_entities:
          name: Camera Entities
          description: List of camera entities to monitor
          default: []
          selector:
            entity:
              multiple: true
              filter:
                - domain:
                    - camera
              reorder: false
        trigger_state:
          name: Trigger State
          description: Automation starts when one of your camera changes to this state.
          default: recording
          selector:
            text:
              multiline: false
              multiple: false
        motion_sensors:
          name: Motion Sensor
          description: Set if your cameras don't change state (Frigate).
          default: []
          selector:
            entity:
              multiple: true
              filter:
                - domain:
                    - binary_sensor
              reorder: false
        duration:
          name: Duration
          description: Duration to record for analysis (in seconds).
          default: 5
          selector:
            number:
              min: 1.0
              max: 60.0
              step: 1.0
              mode: slider
        max_frames:
          name: Max Frames
          description: How many frames to analyze.
          default: 3
          selector:
            number:
              min: 1.0
              max: 60.0
              step: 1.0
              mode: slider
    ai_section:
      name: AI Settings
      description: AI settings for the analysis.
      icon: mdi:brain
      collapsed: true
      input:
        remember:
          name: Store in Timeline
          description: Stores this event in the Timeline so you can ask about it.
          default: true
          selector:
            boolean: {}
        use_memory:
          name: Use Memory
          description: Use information stored in memory to provide additional context.
          default: false
          selector:
            boolean: {}
        message:
          name: Prompt
          description: Model prompt for the video_analyzer action
          default: >
            Summarize the events based on a series of images captured at short intervals. Focus only on moving subjects such as people, vehicles, and other active elements. Ignore static objects and scenery. Provide a clear and concise account of movements and interactions. Do not mention or imply the existence of imagesâ€”present the information as if directly observing the events. If no movement is detected, respond with: 'No activity observed.'
          selector:
            text:
              multiline: true
              multiple: false
        provider:
          name: Provider
          description: Provider to use for analysis.
          selector:
            config_entry:
              integration: llmvision
        model:
          name: Model
          description: Which model to use.
          selector:
            text:
              multiline: false
              multiple: false
        target_width:
          name: Target Width
          description: Downscale images
          default: 1280
          selector:
            number:
              min: 512.0
              max: 3840.0
              step: 1.0
              mode: slider
        max_tokens:
          name: Maximum Tokens
          description: Maximum number of tokens to generate.
          default: 20
          selector:
            number:
              min: 1.0
              max: 300.0
              step: 1.0
              mode: slider
    notification_section:
      name: Notification Settings
      description: Settings for the notification delivery.
      icon: mdi:bell
      collapsed: true
      input:
        telegram_notify_service:
          name: Telegram Notify Service
          description: The correct notify.telegram_* entity. Example: notify.telegram_bot_8415182403_7882720724
          selector:
            entity:
              integration: telegram_bot
              domain: notify
        condition_notify:
          name: Condition to Notify
          description: Condition for notification.
          default: []
          selector:
            condition: {}
        delay_notification:
          name: Notification Cooldown
          description: Time in seconds to wait before sending another notification.
          default: 60
          selector:
            number:
              min: 0.0
              max: 86400.0
              unit_of_measurement: seconds
              mode: box
              step: 1.0
        file_path:
          name: Snapshot Path
          description: The path to the snapshot file for Telegram image.
          default: /media/snapshots/{{ camera_file_path }}/last_motion.jpg
          selector:
            text:
              multiline: false
        tap_navigate:
          name: Tap Navigate (info only)
          default: /lovelace/0
          selector:
            text:
              multiline: false
              multiple: false
    experimental_section:
      name: Experimental Settings
      description: Experimental features.
      icon: mdi:apple-keyboard-option
      collapsed: true
      input:
        important:
          name: Important (Experimental)
          description: Use AI to classify events.
          default: false
          selector:
            boolean: {}
        additional_actions:
          name: Additional Actions (Experimental)
          description: Additional actions after AI analysis and notification.
          default: []
          selector:
            action: {}

variables:
  telegram_notify_service: !input telegram_notify_service
  camera_entities_list: !input camera_entities
  motion_sensors_list: !input motion_sensors
  camera_entity: "{% if motion_sensors_list and not trigger.entity_id.startswith('camera.') %}{% set index = motion_sensors_list.index(trigger.entity_id) %}{{ camera_entities_list[index] }}{% else %}{{ trigger.entity_id }}{% endif %}"
  tag: "{{ camera_entity + int(as_timestamp(now()))|string }}"
  label: Motion detected
  camera_message: '{{ camera_entity.replace("camera.", "").replace("_", " ")|capitalize }}'
  camera: '{{ camera_entities_list[0].replace("camera.", "").replace("_", " ") | title }}'
  camera_entity_snapshot: '{{ camera_entities_list[0] }}'
  camera_file_path: '{{ camera_entity_snapshot.replace("camera.", "") }}'
  file_path: !input file_path
  notification_time: ''
max_exceeded: silent
mode: single

trigger:
- platform: state
  entity_id: !input camera_entities
  to: !input trigger_state
  id: camera_trigger
- platform: state
  entity_id: !input motion_sensors
  to: 'on'
  id: motion_sensor_trigger

condition:
- condition: and
  conditions: !input run_conditions

action:
- alias: Analyze event
  action: llmvision.stream_analyzer
  data:
    image_entity: '{{ [camera_entity] }}'
    duration: !input duration
    provider: !input provider
    model: !input model
    message: !input message
    use_memory: !input use_memory
    remember: !input remember
    expose_images: true
    generate_title: true
    include_filename: true
    max_frames: !input max_frames
    target_width: !input target_width
    max_tokens: !input max_tokens
  response_variable: response

- delay:
    seconds: !input delay_notification

- if:
    - condition: template
      value_template: "{{ telegram_notify_service | length > 0 }}"
  then:
    - alias: Send Telegram message with/without image
      service: "{{ telegram_notify_service }}"
      data:
        message: "{{ response.title }}\n\n{{ response.response_text }}"
        data:
          {% if response.key_frame is defined and response.key_frame|length > 0 %}
          image: "{{ response.key_frame }}"
          {% endif %}

- choose: []
  default: !input additional_actions
