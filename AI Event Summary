blueprint:
  name: AI Event Summary (Telegram, v1.5.1)
  author: valentinfrlch (modified for Telegram)
  homeassistant:
    min_version: 2024.10.0
  description: >
    AI-powered summaries for security camera events. Sends a notification with a preview to Telegram, updated with an AI summary.
  domain: automation
  source_url: https://raw.githubusercontent.com/valentinfrlch/ha-llmvision/refs/heads/main/blueprints/event_summary.yaml
  input:
    # ... [No input section changes needed for Telegram]
    telegram_target:
      name: Telegram Notify Target
      description: Name of your Telegram notifier (e.g., notify.telegram)
      selector:
        text:
    telegram_chat_id:
      name: Telegram Chat ID
      description: Chat ID (leave blank if configured in notifier)
      selector:
        text:
    # [The rest of the input as per original; notification section is not used]
variables:
  # ... [keep all variables up to notify and device_name_map]
  telegram_target: !input telegram_target
  telegram_chat_id: !input telegram_chat_id
  file_path: !input file_path
  snapshot_access_file_path: '{{ file_path | replace(''/config/www'', ''/local'') | replace(''/media'', ''/media/local'') }}'
  # ... [all other variables unchanged]
max_exceeded: silent
mode: single
triggers:
- trigger: state
  entity_id: !input camera_entities
  to: !input trigger_state
  id: camera_trigger
- trigger: state
  entity_id: !input motion_sensors
  to: 'on'
  id: motion_sensor_trigger
condition:
- condition: and
  conditions: !input run_conditions
action:
- choose:
  - conditions:
    - condition: template
      value_template: '{{ important }}'
    sequence:
    - action: llmvision.image_analyzer
      data:
        image_entity: '{{[camera_entity]}}'
        provider: !input provider
        model: !input model
        message: '{{importance_prompt}}'
        include_filename: true
        target_width: 1280
        max_tokens: 3
      response_variable: importance
- choose:
  - conditions:
    - condition: template
      value_template: '{{ important and importance.response_text|lower == ''passive'' }}'
    sequence:
    - stop: Event is not important
# --- NOTIFY TO TELEGRAM: Instead of mobile app notification blocks ---
- alias: Send preview snapshot to Telegram
  service: camera.snapshot
  entity_id: !input camera_entities
  data:
    filename: !input file_path
- service: '{{ telegram_target }}'
  data:
    message: '{{ camera_message }} has detected activity.'
    title: '{{ label }} {{ notification_time }}'
    data:
      photo:
        - file: '{{ snapshot_access_file_path }}'
          caption: '{{ camera_message }} has detected activity.'
    {% if telegram_chat_id %}chat_id: '{{ telegram_chat_id }}'{% endif %}
# AI Analysis as before
- alias: Analyze event
  action: llmvision.stream_analyzer
  data:
    image_entity: '{{[camera_entity]}}'
    duration: !input duration
    provider: !input provider
    model: !input model
    message: !input message
    use_memory: !input use_memory
    remember: !input remember
    expose_images: '{{preview_mode == ''Snapshot'' or remember}}'
    generate_title: !input remember
    include_filename: true
    max_frames: !input max_frames
    target_width: !input target_width
    max_tokens: !input max_tokens
  response_variable: response
- alias: Send AI summary to Telegram
  service: '{{ telegram_target }}'
  data:
    message: '{{ response.title }}\n{{ response.response_text }}'
    title: '{{ label }} {{ notification_time }}'
    data:
      photo:
        - file: '{{ response.key_frame.replace(''/config/media'', ''/media'') }}'
          caption: '{{ response.response_text }}'
    {% if telegram_chat_id %}chat_id: '{{ telegram_chat_id }}'{% endif %}
# --- Optional: Add more as per original for TTS/Experimental/etc ---
- choose: []
  default: !input additional_actions
- delay: !input cooldown
